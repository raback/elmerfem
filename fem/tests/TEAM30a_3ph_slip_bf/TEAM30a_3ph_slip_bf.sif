!--------------------------------------------------------------
! Induction Motor Analyses International TEAM Workshop Problem 30
! - 3 phase problems
! - current density given as body forces, no circuits
! - torque computed in two different ways
! - sweeping over angular velocity 0-1200 rad/s performed
! - mesh resolution set coarse for speedy computation
! - angular velocity given for the rotor (lorentz velocity)
!
! Author: Jonathan Velasco 
! Original date: 9/2021
! jonathan.velasco@csc.fi
!--------------------------------------------------------------
Check Keywords "Warn"
!---------------------------------------------------------
!MESH DATA  
!---------------------------------------------------------
Header
  Mesh DB "." "TEAM30a_3ph"
End
!---------------------------------------------------------


!---------------------------------------------------------
!Parameters
!---------------------------------------------------------
$Je=sqrt(2)*310.0e4  ! Note: the TEAM case defines RMS, we use peak. 
$freq = 60
$w_s = 2*pi*freq

$wmin=0
$wmax=1200
$nw=6   ! increase for better resolution 
$dw=(wmax-wmin)/(nw-1)


!---------------------------------------------------------
!SIMULATION CONFIGURATION 
!---------------------------------------------------------
Simulation
  Max Output Level = 5
  Coordinate System = "Cartesian 2d"
  Simulation Type = "scanning"
  TimeStep Intervals(1) = $nw
  Output Intervals(1) = 1
  Steady State Max Iterations = 1
  Use Mesh Names = True
End
!---------------------------------------------------------

Constants
  Permittivity of Vacuum = 8.8542e-12
  Permeability of Vacuum = 1.256e-6
End

!---------------------------------------------------------

Body 1
  Name = Rotor_Steel
  Material = 2
  Equation = 2
End

Body 2
  Name = Rotor_Aluminum
  Material = 3
  Equation = 2
End

Body 3
  Name = Rotor_side_Airgap
  Material = 1
  Equation = 2

  ! Torque Calculation Method 1:
  ! Arkkio's Method
  ! Only valid in uniformly meshed airgaps
  r inner = Real 3e-2
  r outer = Real 3.2e-2
End

Body 4
  Name = Stator_side_Airgap
  Material = 1
  Equation = 1
End

Body 5
  Name = Stator_Air
  Material = 1
  Equation = 1
End

Body 6
  Name = Stator_Steel
  Material = 4
  Equation = 1
End

Body 7
  Name = Winding_1_plus
  Material = 1
  Equation = 1
  Body Force = 1
End

Body 8
  Name = Winding_1_minus
  Material = 1
  Equation = 1
  Body Force = 4
End

Body 9
  Name = Winding_2_plus
  Material = 1
  Equation = 1
  Body Force = 2
End

Body 10
  Name = Winding_2_minus
  Material = 1
  Equation = 1
  Body Force = 5
End

Body 11
  Name = Winding_3_plus
  Material = 1
  Equation = 1
  Body Force = 3
End

Body 12
  Name = Winding_3_minus
  Material = 1
  Equation = 1
  Body Force = 6
End

!---------------------------------------------------------
! Boundary conditions
!---------------------------------------------------------

Boundary Condition 1
  Name = Infinity
  Az re = Real 0
  Az im = Real 0
End

Boundary Condition 2
  Name = Stator_side_Mortar_Boundary

  Mortar BC Static = Logical True
  Rotational Projector = Logical True
  Galerkin Projector = Logical True
  Mortar BC = Integer 3
End

Boundary Condition 3
  Name = Rotor_side_Mortar_Boundary
End


!---------------------------------------------------------
!Sources (Coming from circuit definition)
!---------------------------------------------------------


! Torque Calculation Method 2:
! Rotor Component for torque calculation using
! the sum of nodal forces in rotating domains
! The postprocessing quantity is obtained via the CalcFields Solver
! Note: this is active only if CalcFields solver is turned on!
Component 1
  Name = String "Rotating_Domains"
  Master Bodies(2) = Integer 1 2  
  Calculate Magnetic Torque = Logical true
End


!---------------------------------------------------------
! Material Properties 
!---------------------------------------------------------

Material 1
  Name = "Air"
  Electric Conductivity = 0.0
  Relative Permittivity = 1.0
  Relative Permeability = 1.0
End

Material 2
  Name = "Rotor_Steel"
  Electric Conductivity = 1.6e6
  Relative Permittivity = 1.0
  Relative Permeability = 30.0
End

Material 3
  Name = "Rotor_Aluminum"
  Electric Conductivity = 3.72e7
  Relative Permittivity = 1.0
  Relative Permeability = 1.0
End

Material 4
  Name = "Stator_Steel"
  Electric Conductivity = 0.0
  Relative Permittivity = 1.0
  Relative Permeability = 30.0
End


!---------------------------------------------------------
! Solver Configuration
!---------------------------------------------------------
Equation 1
  Active Solvers(2) = 1 2
  Angular Frequency = Variable "time"
    Real MATC "w_s"
End

! Different angular frequency given for rotor and stator
Equation 2
  Active Solvers(2) = 1 2
  Angular Frequency = Variable "time"
    Real MATC "w_s-(tx-1)*dw"
End

Solver 1
  Equation = MgDyn2D
  Variable = Az[Az re:1 Az im:1]
  Procedure = "MagnetoDynamics2D" "MagnetoDynamics2DHarmonic"
  Linear System Solver = Direct
  Linear System Direct Method = MUMPS

  ! Needed for strong coupling with circuits
  Export Lagrange Multiplier = True
  Apply Mortar BCs = Logical True

!  Old Model LUmping = Logical True
End 

Solver 2
  Equation = CalcFields
  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"
  Calculate Current Density = True 
  Calculate Magnetic Flux Density = True
  Calculate Nodal Fields = False
  Calculate Elemental Fields = True
  Calculate Nodal Forces = True

! Eliminated for testing 
  Exec Solver = never
End


Solver 3
  Equation = "ResultOutput"
  Procedure = "ResultOutputSolve" "ResultOutputSolver"
  Exec Solver = after saving 
  Output File Name = TEAM30A_3ph
  Output Directory = res
  Save Geometry Ids = Logical True
  Vtu Format = Logical True
  Gmsh Format = Logical True

  Discontinuous Bodies = True

! Eliminated for the test
  Exec Solver = never
End 


Solver 4
  Exec Solver = After Timestep
  Procedure = "SaveData" "SaveScalars"
  Filename = f.dat
  Save Component Results = True 
  Variable 1 = time
  Expression 1 = Variable "time"
    Real MATC "(tx-1)*dw"

! Plot torque in octave/matlab:
! load f.dat
! plot(f(:,7),f(:,4))

! Reference norm is torque by Arkkio's method
  Show Norm Index = 4
End



Body Force 1
  Current Density  = $-Je*cos(0)
  Current Density Im = Real $-Je*sin(0)
End
Body Force 2
  Current Density  = $-Je*cos(2*pi/3)
  Current Density Im = Real $-Je*sin(2*pi/3)
End
Body Force 3
  Current Density  = $-Je*cos(-2*pi/3)
  Current Density Im = Real $-Je*sin(-2*pi/3)
End
Body Force 4
  Current Density  = $Je*cos(0)
  Current Density Im = Real $Je*sin(0)
End
Body Force 5
  Current Density  = $Je*cos(2*pi/3)
  Current Density Im = Real $Je*sin(2*pi/3)
End
Body Force 6
  Current Density  = $Je*cos(-2*pi/3)
  Current Density Im = Real $Je*sin(-2*pi/3)
End


Solver 1 :: Reference Norm = 1.00955005E+04
Solver 4 :: Reference Norm = 1.98821798E+00

