!---------------------------------------------------------
! A verification case for assembling 3D solid and 2D shell 
! equations into a single linear system so that the coupled 
! equations can be solved simultaneously.
!
! This is a bending-dominated benchmark problem described in 
! Pitk√§ranta et al. Shell deformation states and the finite element 
! method: a benchmark study of cylindrical shells. Here the boundary
! layer adjacent to the free edge is modelled in 3D and
! the 2D shell model is used elsewhere. For a model using 
! the shell equations only see the test 
!
!       ../tests/Shell_BenchmarkCase2_Quad
!
! The results of the coupled simulation have been verified
! against using the pure shell equations.
!
! The author of the original version of test: Mika Malinen
!
!------------------------------------------------------------

! Define the thickness of the shell as a MATC variable:
$ t = 5.0e-2

Header
  Mesh DB "." "cylinder"
  Include Path ""
  Results Directory ""
End 

Simulation
  Max Output Level = 5
  Coordinate System = Cartesian 3D
  Simulation Type = Steady State
  Output Intervals = 1
  Steady State Max Iterations = 1

  Post File = coupled.vtu
  vtu: Vector Field 1 = String "displacement"
  vtu: Vector Field 1 Complement = String "u"
  vtu: Vector Field 2 = String "dnu"
End

Body 1
  Name = "Shell Body"
  Equation = 2
  Material = 1
  Body Force = 1 
End

Body 2
  Name = "Solid"
  Equation = 1
  Material = 1 
End

Body Force 1
  Name = "Transverse load"
  Normal Pressure = Variable Coordinate
     Real MATC "-t^3 * 1.0e+5 * (1-2*tx(0)*tx(0))"
End 

Equation 1
  Name = "Elasticity"
  Active Solvers = 1 
End

Equation 2
  Name = "Shell"
  Active Solvers = 2 
End

Material 1
  Name = "Lame model"
  Youngs Modulus = 7.0e+10
  Density = 1.0e3
  Poisson Ratio = $1.0/3.0
  Shell Thickness = $t
End

Solver 1
  Equation = "Navier Equations"
  Variable = -dofs 3 Displacement
  Procedure = "StressSolve" "StressSolver"

  Nonlinear System Max Iterations = 1
  Nonlinear System Consistent Norm = Logical True

  Linear System Solver = direct
!  Linear System Direct Method = MUMPS

! Request for a linear system that couples two structural models:
  Structure-Structure Coupling = Logical True

! The index of master structure is assumed to "1" and the
! other solver is defined here:
  Shell Solver Index = Integer 2

! Enforce the block mode when solving the system:
  Linear System Block Mode = Logical True

! Use linear system scalings in the solution of block system: 
  Block Scaling = true

! Define the solvers that build the block system:
  Block Solvers(2) = Integer 1 2

! Call the assembly for the 2nd solver using the slave solver slot:
  Pre Solvers(1) = 2
  
  Linear System Block Method = String "other"
  Block Monolithic = Logical True

! We don't want to displace the mesh in this test since only the solid would
! be displaced, not the shell. 
  Displace Mesh = False
End

Solver 2
  Equation = "Shell equations"
  Procedure = "ShellSolver" "ShellSolver"

  Steady State Convergence Tolerance = 1e-09
  Nonlinear System Convergence Tolerance = 1e-8
  Nonlinear System Max Iterations = 1

  Exec Solver = never
  Linear System Solver Disabled = Logical True  
End


Solver 3
  Exec Solver = never
  Equation = SaveScalars
  Procedure = "SaveData" "SaveScalars"
  
  Filename = f.dat
  File Append = Logical True
  Parallel Reduce = Logical True

  Variable 1 = Displacement
  Operator 1 = dofs
  Operator 2 = partitions
  Operator 3 = max abs 
  Operator 4 = norm
  Operator 5 = min
  Operator 6 = max
End 

Boundary Condition 1
  Target Boundaries(1) = 7
  U 2 = Real 0
  DNU 2 = Real 0
End

Boundary Condition 2
  Target Boundaries(1) = 8
  U 3 = Real 0
  DNU 3 = Real 0
End

Boundary Condition 3
  Target Boundaries(1) = 9
  U 1 = Real 0
  DNU 1 = Real 0
End

Boundary Condition 4
  Target Boundaries(1) = 2
  Displacement 3 = Real 0
End

Boundary Condition 5
  Target Boundaries(1) = 3
End

Boundary Condition 6
  Target Boundaries(1) = 4
  Displacement 1 = Real 0
End

Boundary Condition 7
  Name = "Top solid face"
  Target Boundaries(1) = 5 
  Normal Force = Variable Coordinate
     Real MATC "-(t/2.0)^3 * 1.0e+5 * (1-2*tx(0)*tx(0)/(tx(0)*tx(0)+(1-tx(2))^2))"
End

Boundary Condition 8
  Name = "Bottom solid face"
  Target Boundaries(1) = 6
  Normal Force = Variable Coordinate
     Real MATC "(t/2.0)^3 * 1.0e+5 * (1-2*tx(0)*tx(0)/(tx(0)*tx(0)+(1-tx(2))^2))"
End


Solver 1:: Reference Norm = 7.13770151E-07



